<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACkAIgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        +KazcUMxOajPyKfqO1ABu3dTn+lNdwDUcs+w1RvNVWBTuagC89xsH+Jqnd6usI+Y1g6r4zgtVIZ+nqa+
        f/20f2x9P/Zu+EupeKL6RhZaa8H2l0Xe0ELzxxyzBe4jRzIR3WNqAufQ+q/ETTtEt3mur23tYY/vvNII
        0T8TS+HviFp/imwiutPu7e7tZwSkiMCrYJH6EEfXjrXxzqPj6bxRZWepWV3HdQ3kEd1bagkwuDcRSIGS
        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
</value>
  </data>
</root>